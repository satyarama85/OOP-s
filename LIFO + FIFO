class lifo;
  int intQ[$];

  function void put(int a);
    intQ.push_front(a); // push at front
  endfunction

  function void get(output int a);
    a = intQ.pop_front(); // pop from front => LIFO behavior
  endfunction
endclass
class fifo;
  int intQ[$];

  function void put(int a);
    intQ.push_front(a); // push at front
  endfunction

  function void get(output int a);
    a = intQ.pop_back(); // pop from back => FIFO behavior
  endfunction
endclass

module tb;
  lifo s_lifo = new();
  fifo s_fifo = new();
  int num;

  initial begin
    repeat(5) begin
      num = $urandom_range(10,30);
      s_lifo.put(num);
      $display("Pushed (LIFO) num = %0d", num);
    end

    repeat(5) begin
      s_lifo.get(num);# KERNEL: Pushed (LIFO) num = 12
# KERNEL: Pushed (LIFO) num = 29
# KERNEL: Pushed (LIFO) num = 26
# KERNEL: Pushed (LIFO) num = 28
# KERNEL: Pushed (LIFO) num = 10
# KERNEL: Popped (LIFO) num = 10
# KERNEL: Popped (LIFO) num = 28
# KERNEL: Popped (LIFO) num = 26
# KERNEL: Popped (LIFO) num = 29
# KERNEL: Popped (LIFO) num = 12
# KERNEL: Pushed (FIFO) num = 22
# KERNEL: Pushed (FIFO) num = 13
# KERNEL: Pushed (FIFO) num = 19
# KERNEL: Pushed (FIFO) num = 14
# KERNEL: Pushed (FIFO) num = 26
# KERNEL: Popped (FIFO) num = 22
# KERNEL: Popped (FIFO) num = 13
# KERNEL: Popped (FIFO) num = 19
# KERNEL: Popped (FIFO) num = 14
# KERNEL: Popped (FIFO) num = 26
# KERNEL: Simulation has finished.
      $display("Popped (LIFO) num = %0d", num);
    end
    repeat(5) begin
      num = $urandom_range(10,30);
      s_fifo.put(num);
      $display("Pushed (FIFO) num = %0d", num);
    end

    repeat(5) begin
      s_fifo.get(num);
      $display("Popped (FIFO) num = %0d", num);
    end
  end
endmodule

Output:
