// Code your testbench here
// or browse Examples
class apb_tx;
  //properties of the class
  rand bit wr_rd;
  bit [7:0] addr;
  rand bit [31:0] data;
  rand bit [3:0] sel;
  //methods
  function void print();
    $display("wr_rd=%0b",wr_rd);
    $display("addr=%0h",addr);
    $display("data=%0h",data);
    $display("sel=%0d",sel);
  endfunction
  
  //constraint:-Compulsory rule need to follow.
  constraint sel_c{
    sel inside{4'b0010,4'b0100,4'b1000,4'b1001,4'b0000};
  }
  /*constraint sel_c1{
    sel inside{4'b1111};
  }*/
endclass
module tb;
  //integer a;//static data types(32 bit)
  apb_tx tx=new();//dynamic data type
  initial begin
    repeat(4) begin
      assert(tx.randomize());
    tx.addr=8'h23;
    tx.print();
    end
  end
endmodule

output
# KERNEL: wr_rd=1
# KERNEL: addr=23
# KERNEL: data=cafc69bc
# KERNEL: sel=4
# KERNEL: wr_rd=1
# KERNEL: addr=23
# KERNEL: data=947db9eb
# KERNEL: sel=0
# KERNEL: wr_rd=0
# KERNEL: addr=23
# KERNEL: data=fc55d4c5
# KERNEL: sel=4
# KERNEL: wr_rd=1
# KERNEL: addr=23
# KERNEL: data=9e3bf206
# KERNEL: sel=0
# KERNEL: Simulation has finished.
